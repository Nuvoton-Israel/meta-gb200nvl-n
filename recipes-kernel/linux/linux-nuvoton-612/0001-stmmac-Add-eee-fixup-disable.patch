From 8ea1e5ac091bb21d0d489caf2a767e0a23f48c7e Mon Sep 17 00:00:00 2001
From: Tomer Maimon <tmaimon77@gmail.com>
Date: Tue, 19 Mar 2024 19:50:28 +0200
Subject: [PATCH 1/5] stmmac: Add eee fixup disable

Under some circumstances, a very high interruptrate is generated by
lpi_irq on stmmac driver.
Workaround on some boards SoCs/boards can be added to disable eee
advertising.

Signed-off-by: Tomer Maimon <tmaimon77@gmail.com>
---
 drivers/net/ethernet/stmicro/stmmac/stmmac_main.c     | 5 ++++-
 drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c | 3 +++
 include/linux/stmmac.h                                | 1 +
 3 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
index cf7b59b8cc64..f359365143fe 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_main.c
@@ -474,6 +474,9 @@ bool stmmac_eee_init(struct stmmac_priv *priv)
 	/* Check if MAC core supports the EEE feature. */
 	if (!priv->dma_cap.eee)
 		return false;
+		
+	if (priv->plat->eee_force_disable)
+		return false;
 
 	mutex_lock(&priv->lock);
 
@@ -1111,7 +1114,7 @@ static void stmmac_mac_link_up(struct phylink_config *config,
 		writel(ctrl, priv->ioaddr + MAC_CTRL_REG);
 
 	stmmac_mac_set(priv, priv->ioaddr, true);
-	if (phy && priv->dma_cap.eee) {
+	if (phy && priv->dma_cap.eee && !priv->plat->eee_force_disable) {
 		priv->eee_active =
 			phy_init_eee(phy, !(priv->plat->flags &
 				STMMAC_FLAG_RX_CLK_RUNS_IN_LPI)) >= 0;
diff --git a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
index aaf008bdbbcd..d5a7f984427c 100644
--- a/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
+++ b/drivers/net/ethernet/stmicro/stmmac/stmmac_platform.c
@@ -489,6 +489,9 @@ stmmac_probe_config_dt(struct platform_device *pdev, u8 *mac)
 	if (of_property_read_bool(np, "snps,en-tx-lpi-clockgating"))
 		plat->flags |= STMMAC_FLAG_EN_TX_LPI_CLOCKGATING;
 
+	plat->eee_force_disable =
+		of_property_read_bool(np, "snps,eee-force-disable");
+
 	/* Set the maxmtu to a default of JUMBO_LEN in case the
 	 * parameter is not present in the device tree.
 	 */
diff --git a/include/linux/stmmac.h b/include/linux/stmmac.h
index d79ff252cfdc..735ca2ea86a2 100644
--- a/include/linux/stmmac.h
+++ b/include/linux/stmmac.h
@@ -247,6 +247,7 @@ struct plat_stmmacenet_data {
 	struct phylink_pcs *(*select_pcs)(struct stmmac_priv *priv,
 					  phy_interface_t interface);
 	void *bsp_priv;
+	int eee_force_disable;
 	struct clk *stmmac_clk;
 	struct clk *pclk;
 	struct clk *clk_ptp_ref;
-- 
2.43.0

